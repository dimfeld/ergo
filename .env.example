DATABASE_URL=postgresql://ergo_admin:SOME_PASSWORD@localhost/ergo
REDIS_URL=redis://localhost:6379/0

COOKIE_SIGNING_KEY="an^cn3*c3prinzcw^nyuo8za3y8o!30s"

DATABASE_ROLE_WEB_PASSWORD=blCIT&RVtlrcw3brc3l82
DATABASE_ROLE_BACKEND_PASSWORD=vk6cra3loz83brczakarc38ba2
DATABASE_ROLE_ENQUEUER_PASSWORD=CVT@KirlbCRv7liz3v3trz7is

# A hack until we have a real admin user system
ADMIN_USER_ID=70c81d26-ded8-4dbe-8377-4e5ae5697df7

# Local org and user IDs for bootstrapping data from filesystem.
ORG_ID=900f4644-5364-4b17-8b4a-eca9879e84c0
ORG_NAME="Org"
USER_ID=70c81d26-ded8-4dbe-8377-4e5ae5697df7
USER_NAME="Me"
USER_EMAIL='me@example.com"

# Generate using `cargo run --bin hash_passwd -- "the password"
PASSWORD_HASH='hash_passwd output'
DISCORD_WEBHOOK_URL="https://discord.com/api/webhooks/the_url

# After bootstrapping, generate using `cargo run --bin make_api_key`
API_KEY='the api key'

# Base IDs for bootstrapping. Values high enough that they should never conflict with objects created in the app.
BASE_INPUT_ID=30000000
BASE_ACTION_ID=40000000
ACTION_CATEGORY_ID_GENERAL=5000000001
BASE_ACCOUNT_ID=60000000

# Only needed if you install the youtube-dl action.
YOUTUBE_DL_OUTPUT_DIR=/home/me/video/youtube
